sub rmtree {
    my $dir = shift;
    my %findargs = (
        bydepth   => 1,
        no_chdir  => 1,
        wanted    => sub {
            if (! -l && -d _) {
                rmdir  or warn "Couldn't rmdir $_: $!";
            } else {
                unlink or warn "Couldn't unlink $_: $!";
            }
        }
    );
    File::Find::find { %findargs } => $dir;
}

sub setuptmpdir {
    # Manually create 'tmp' directory for testing and move into it
    my $cwd = cwd();
    my $tmp = 'tmp';
    ok((mkdir $tmp, 0755), "able to create testing directory");
    ok(chdir $tmp, 'changed to tmp directory for testing');
    return ($cwd, $tmp);
}

sub cleanuptmpdir {
    # Cleanup 'tmp' directory following testing
    my ($cwd, $tmp) = @_;
    ok(chdir $cwd, 'changed back to original directory after testing');
    rmtree($tmp);
    ok(! -d $tmp, "tmp directory has been removed");
}

=pod Sept3Deletions

    _starttest
    _endtest
    _get_realhome
    _get_pseudodir
    _get_personal_defaults
    _restore_personal_defaults

=cut

sub _starttest {
    my $realhome = _get_realhome();
    local $ENV{HOME} = _get_pseudodir("./t/testlib/pseudohome"); # 2 tests
    my ( $mmkr_dir, $personal_defaults_file ) = 
        _get_personal_defaults($ENV{HOME});  # 1 test
    return ( $realhome, $mmkr_dir, $personal_defaults_file );
}

sub _endtest {
    my ($realhome, $mmkr_dir, $personal_defaults_file) = @_;
    $ENV{HOME} = $realhome;
    ( $mmkr_dir, $personal_defaults_file ) = 
        _restore_personal_defaults( 
            $mmkr_dir, $personal_defaults_file 
        ); # 1 test
}

sub _get_realhome {
    my $realhome;
    if ($^O eq 'MSWin32') {
        require Win32;
        Win32->import( qw(CSIDL_LOCAL_APPDATA) );  # 0x001c 
        $realhome =  Win32::GetFolderPath( CSIDL_LOCAL_APPDATA() );
    } else {
        $realhome = $ENV{HOME};
    }
}
sub _get_pseudodir {
    my $pseudodir = shift;
    ok(-d $pseudodir, "_starttest:  pseudohome directory exists");
    like($pseudodir, qr/pseudohome/, "_starttest:  pseudohome identified");
    return $pseudodir;
}

sub _get_personal_defaults {
    my $home = shift;
    my $mmkr_dir = "$home/.modulemaker"; 
    my $personal_defaults_file = "ExtUtils/ModuleMaker/Personal/Defaults.pm";
    if (-f "$mmkr_dir/$personal_defaults_file") {
        move("$mmkr_dir/$personal_defaults_file", 
             "$mmkr_dir/$personal_defaults_file.bak"); 
        ok(-f "$mmkr_dir/$personal_defaults_file.bak",
            "_starttest:  personal defaults stored as .bak"); 
    } else {
        ok(1, "_starttest:  no personal defaults file found");
    }
    return ( $mmkr_dir, $personal_defaults_file );
}

sub _restore_personal_defaults {
    my ( $mmkr_dir,  $personal_defaults_file ) = @_;
    if (-f "$mmkr_dir/$personal_defaults_file.bak") {
        move("$mmkr_dir/$personal_defaults_file.bak", 
             "$mmkr_dir/$personal_defaults_file"); 
        ok(-f "$mmkr_dir/$personal_defaults_file",
            "_endtest:  personal defaults restored"); 
    } else {
        ok(1, "_endtest: no personal defaults file found");
    }
    return ( $mmkr_dir,  $personal_defaults_file );
}

